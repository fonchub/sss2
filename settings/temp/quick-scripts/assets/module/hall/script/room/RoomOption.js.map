{"version":3,"sources":["RoomOption.js"],"names":["beiMiCommon","require","cc","Class","extends","properties","atlas","default","type","SpriteAtlas","optionsnode","Node","optiongroup","Prefab","optiongroupitem","memonode","createroom","freeopt","fenshuselect","onLoad","self","console","log","group","Array","node","on","event","extparams","values","inx","length","groupitem","value","j","groupoptions","option","checked","item","data","code","stopPropagation","preload","init","playway","memo","active","string"],"mappings":"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","file":"RoomOption.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\module\\hall\\script\\room","sourcesContent":["var beiMiCommon = require(\"BeiMiCommon\");\ncc.Class({\n    extends: beiMiCommon,\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        atlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        // memo:{\n        //     default:null ,\n        //     type : cc.Label\n        // },\n        optionsnode:{\n            default:null ,\n            type : cc.Node\n        },\n        // roomtitle:{\n        //     default:null ,\n        //     type : cc.Node\n        // },\n        optiongroup:{\n            default:null ,\n            type : cc.Prefab\n        },\n        optiongroupitem:{\n            default:null ,\n            type : cc.Prefab\n        },\n        memonode:{\n            default:null ,\n            type : cc.Node\n        },\n        createroom:{\n            default:null ,\n            type : cc.Node\n        },\n        freeopt:{\n            default:null ,\n            type : cc.Node\n        },\n        fenshuselect:{\n            default:null,\n            type:cc.Node\n        }\n        \n        \n    },\n\n    // use this for initialization\n    onLoad: function () {\n        let self = this ;\n        console.log(self);\n        console.log(\"self的值\")\n        this.group = new Array();\n        this.node.on('createroom', function (event) {\n            /**\n             * 把参数 汇总一下， 然后转JSON以后序列化成字符串，发送 创建房间的请求\n             */\n            var extparams = {} ;\n            let values = new Array();\n            for(var inx=0 ; inx<self.group.length ; inx++){\n                let groupitem = self.group[inx] ;\n                let value = \"\" ;\n                for(var j=0 ; j<groupitem.groupoptions.length ; j++){\n                    let option = groupitem.groupoptions[j] ;\n                    if(option.checked == true){\n                        if(value != \"\"){\n                            value = value + \",\" ;\n                        }\n                        value = value + option.item.value ;\n                    }\n                }\n                extparams[groupitem.data.code] = value ;\n            }\n            /**\n             * 藏到全局变量里去，进入场景后使用，然后把这个参数置空\n             * @type {{}}\n             */\n            // extparams.gametype = self.data.code ;\n            // console.log(self.data.code+\"这个是code\");\n            // extparams.playway = self.data.id;\n            // console.log(self.data.id+\"这个是id\");\n            // extparams.gamemodel = \"room\" ;\n            /**\n             * 发送创建房间开始游戏的请求\n             */\n            event.stopPropagation() ;\n            self.preload(extparams , self) ;\n        });\n    },\n    init:function(playway){\n        \n        this.data = playway ;\n        if(this.memo != null && playway.memo!=null && playway.memo!=\"\"){\n            this.memonode.active = true ;\n            this.memo.string = playway.memo ;\n        }else if(this.memonode!=null){\n            this.memonode.active = false ;\n        }\n        // if(playway.free == true){\n        //     this.freeopt.active = true;\n        //     this.createroom.active = false ;\n        // }else{\n        //     this.freeopt.active = false;\n        //     this.createroom.active = true ;\n        // }\n        // if(playway.roomtitle!=null && playway.roomtitle!=\"\"){\n        //     let frame = this.atlas.getSpriteFrame(playway.roomtitle);\n        //     if(frame!=null){\n        //         this.roomtitle.getComponent(cc.Sprite).spriteFrame = frame ;\n        //     }\n        // }\n        // if(this.optiongroup!=null && playway.groups!=null){\n        //     for(var inx = 0 ; inx < playway.groups.length ; inx++){\n        //         let group = cc.instantiate(this.optiongroup) ;\n\n\n        //         let playWayGroup = group.getComponent(\"PlaywayGroup\") ;\n        //         playWayGroup.init(playway.groups[inx] , this.optiongroupitem , playway.items) ;\n        //         this.group.push(playWayGroup);\n\n        //         group.parent = this.optionsnode ;\n        //     }\n        // }\n    },\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}