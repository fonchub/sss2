{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\resources\\script\\lib/assets\\resources\\script\\lib\\Base64.js"],"names":["cc","Class","extends","Component","properties","statics","decode","_base64Str","BASE64_MAPPING","_len","length","extra_Zero_Count","charAt","substring","binaryArray","i","len","c","j","size","_tmp","_toBinary","_tmpLen","k","unshift","concat","slice","unicode","unicodeBinary","_toDecimal","sum","ascii","binary","Array","b","Math","floor","push","reverse","dec","p","pow","onLoad"],"mappings":"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","file":"Base64.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\resources\\script\\lib","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n    statics:{\n\n        decode : function(_base64Str){\n            var BASE64_MAPPING = [\n                'A','B','C','D','E','F','G','H',\n                'I','J','K','L','M','N','O','P',\n                'Q','R','S','T','U','V','W','X',\n                'Y','Z','a','b','c','d','e','f',\n                'g','h','i','j','k','l','m','n',\n                'o','p','q','r','s','t','u','v',\n                'w','x','y','z','0','1','2','3',\n                '4','5','6','7','8','9','+','/'\n            ];\n            var _len = _base64Str.length;\n            var extra_Zero_Count = 0;\n            /**\n             *计算在进行BASE64编码的时候，补了几个0\n             */\n            if(_base64Str.charAt(_len-1) == '='){\n                //alert(_base64Str.charAt(_len-1));\n                //alert(_base64Str.charAt(_len-2));\n                if(_base64Str.charAt(_len-2) == '='){//两个等号说明补了4个0\n                    extra_Zero_Count = 4;\n                    _base64Str = _base64Str.substring(0 , _len-2);\n                }else{//一个等号说明补了2个0\n                    extra_Zero_Count = 2;\n                    _base64Str = _base64Str.substring(0 , _len - 1);\n                }\n            }\n\n            var binaryArray = [];\n            for(var i = 0 , len = _base64Str.length; i < len ; ++i){\n                var c = _base64Str.charAt(i);\n                for(var j = 0 , size = BASE64_MAPPING.length ; j < size ; ++j){\n                    if(c == BASE64_MAPPING[j]){\n                        var _tmp = this._toBinary(j);\n                        /*不足6位的补0*/\n                        var _tmpLen = _tmp.length;\n                        if(6-_tmpLen > 0){\n                            for(var k = 6-_tmpLen ; k > 0 ; --k){\n                                _tmp.unshift(0);\n                            }\n                        }\n                        binaryArray = binaryArray.concat(_tmp);\n                        break;\n                    }\n                }\n            }\n\n            if(extra_Zero_Count > 0){\n                binaryArray = binaryArray.slice(0 , binaryArray.length - extra_Zero_Count);\n            }\n\n            var unicode = [];\n            var unicodeBinary = [];\n            for(var i = 0 , len = binaryArray.length ; i < len ; ){\n                if(binaryArray[i] == 0){\n                    unicode=unicode.concat(this._toDecimal(binaryArray.slice(i,i+8)));\n                    i += 8;\n                }else{\n                    var sum = 0;\n                    while(i < len){\n                        if(binaryArray[i] == 1){\n                            ++sum;\n                        }else{\n                            break;\n                        }\n                        ++i;\n                    }\n                    unicodeBinary = unicodeBinary.concat(binaryArray.slice(i+1 , i+8-sum));\n                    i += 8 - sum;\n                    while(sum > 1){\n                        unicodeBinary = unicodeBinary.concat(binaryArray.slice(i+2 , i+8));\n                        i += 8;\n                        --sum;\n                    }\n                    unicode = unicode.concat(this._toDecimal(unicodeBinary));\n                    unicodeBinary = [];\n                }\n            }\n            return unicode;\n        },\n        _toBinary : function(ascii){\n            var binary = new Array();\n            while(ascii > 0){\n                var b = ascii%2;\n                ascii = Math.floor(ascii/2);\n                binary.push(b);\n            }\n            /*\n            var len = binary.length;\n            if(6-len > 0){\n                for(var i = 6-len ; i > 0 ; --i){\n                    binary.push(0);\n                }\n            }*/\n            binary.reverse();\n            return binary;\n        },\n        _toDecimal : function(binary){\n            var dec = 0;\n            var p = 0;\n            for(var i = binary.length-1 ; i >= 0 ; --i){\n                var b = binary[i];\n                if(b == 1){\n                    dec += Math.pow(2 , p);\n                }\n                ++p;\n            }\n            return dec;\n        }\n    },\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}