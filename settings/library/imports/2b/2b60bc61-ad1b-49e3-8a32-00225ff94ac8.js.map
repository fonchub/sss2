{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\module\\login\\script/assets\\module\\login\\script\\init.js"],"names":["cc","Class","extends","Component","properties","_progress","_splash","_isLoading","loaddingPrefab","default","type","Prefab","alertPrefab","onLoad","sys","isNative","isMobile","canvas","node","getComponent","Canvas","fitHeight","fitWidth","win","director","getWinSize","view","setDesignResolutionSize","width","height","ResolutionPolicy","EXACT_FIT","initMgr","start","self","SHOW_TIME","FADE_TIME","console","log","beimi","routes","event","http","require","seckey","gamestatus","dialog","openwin","loadding","NodePool","put","instantiate","game","model","playway","name","temp","games","i","length","gamemodel","inx","types","code","Audio","audio","init","SocketIO","window","io","playBGM","Button","prototype","touchEndedClone","_onTouchEnded","_soundOn","setSoundEffect","on","interactable","enabledInHierarchy","_pressed","playSFX"],"mappings":"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","file":"init.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\module\\login\\script","sourcesContent":["cc.Class({\n    \n    //cc.Class继承自cc.Component\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        _progress:0.0,\n        _splash:null,\n        _isLoading:false,//是否成功加载\n        loaddingPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        alertPrefab: {\n            default: null,\n            type: cc.Prefab\n        }\n    },\n\n    // use this for initialization\n    // 将其用于初始化\n    onLoad: function () {\n        //非本地并且不是移动系统的进if  \n        if(!cc.sys.isNative && cc.sys.isMobile){\n            //返回节点上canvas类型的所有组件赋值给canvas\n            var canvas = this.node.getComponent(cc.Canvas);\n            //优先将设计分辨率高度撑满视图高度。\n            canvas.fitHeight = true;\n            //优先将设计分辨率宽度撑满视图宽度。\n            canvas.fitWidth = true;\n        }\n        'use strict';\n        //获取视图的大小赋值给win\n        let win = cc.director.getWinSize();\n        //通过设置设计分辨率和匹配模式来进行游戏画面的屏幕适配(视图的宽,视图的高,整个应用程序在指定的区域内的可见位置);;作用就是屏幕自适应\n        cc.view.setDesignResolutionSize(win.width, win.height, cc.ResolutionPolicy.EXACT_FIT);\n        //最后调用initMgr方法\n        this.initMgr();\n\n    },\n    start:function(){        \n        var self = this;\n        var SHOW_TIME = 3000;\n        var FADE_TIME = 500;\n        /***\n         * \n         * 控制登录界面或者广告首屏界面显示时间\n         * \n         */\n    },\n    initMgr:function(){\n        console.log(cc.beimi+\"这个是要打印的值\")\n        //cc.beimi的值为空\n        if(cc.beimi == null){\n            /**\n             * 增加了游戏全局变量控制，增加了 cc.beimi.gamestatus 参数，可选值：ready|notready|playing\n             * @type {{}}\n             */\n            cc.beimi = {};\n            cc.beimi.routes = {} ;\n            cc.beimi.event = {}\n\n            cc.beimi.http = require(\"HTTP\");\n            console.log(cc.beimi.http+\"第一个\")\n\n            cc.beimi.seckey = \"beimi\";\n            console.log(cc.beimi.seckey+\"第二个\")\n\n            cc.beimi.gamestatus = \"none\" ;\n            console.log(cc.beimi.gamestatus+\"第三个\")\n\n\n\n\n            cc.beimi.dialog = null ;   //弹出的提示对话框，  alert\n\n            cc.beimi.openwin = null ;  //弹出的对话窗口，    设置、玩法、战绩等等\n\n            cc.beimi.loadding = new cc.NodePool();  //创建对象缓存池\n                                    //克隆loaddingPrefab对象写入<-\n            cc.beimi.loadding.put(cc.instantiate(this.loaddingPrefab)); // 创建节点\n\n            cc.beimi.dialog = new cc.NodePool();    //创建对象缓存池\n                                    //克隆alertPrefab对象写入<-\n            cc.beimi.dialog.put(cc.instantiate(this.alertPrefab)); // 创建节点\n\n            /**\n             * 游客登录，无需弹出注册对话框，先从本地获取是否有过期的对话数据，如果有过期的对话数据，则使用过期的对话数据续期\n             * 如果没有对话数据，则重新使用游客注册接口\n             */\n            // this.loginFormPool = new cc.NodePool();\n            // this.loginFormPool.put(cc.instantiate(this.prefab)); // 创建节点\n            cc.beimi.game = {\n                model : null ,\n                playway : null,\n                type:function(name){\n                    var temp ;\n                    if(cc.beimi.games !=null){\n                        for(var i=0 ; i<cc.beimi.games.length ; i++){\n                            var gamemodel = cc.beimi.games[i] ;\n                            for(var inx = 0 ; inx < gamemodel.types.length ; inx++){\n                                var  type = gamemodel.types[inx] ;\n                                if(type.code == name){\n                                    temp = type ;\n                                }\n                            }\n                        }\n                    }\n                    return temp ;\n                }\n            };\n\n            var Audio = require(\"Audio\");\n            cc.beimi.audio = new Audio();\n            cc.beimi.audio.init();\n\n            var SocketIO = require(\"socket.io\");\n            window.io = new SocketIO();\n\n            cc.beimi.audio.playBGM(\"bgMain.mp3\");\n\n            cc.Button.prototype.touchEndedClone = cc.Button.prototype._onTouchEnded ;\n            cc.Button.prototype._soundOn = true ;\n            cc.Button.prototype.setSoundEffect = function(on){\n                this._soundOn = on ;\n            }\n            cc.Button.prototype._onTouchEnded = function(event){\n                if(this.interactable && this.enabledInHierarchy && this._pressed && this._soundOn == true){\n                    /**\n                     * 播放声效\n                     */\n                    cc.beimi.audio.playSFX(\"select.mp3\");\n                }\n                this.touchEndedClone(event) ;\n            }\n        }\n    }\n\n});\n"]}