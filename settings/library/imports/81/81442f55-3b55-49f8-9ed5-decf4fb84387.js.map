{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\resources\\prefab\\room/assets\\resources\\prefab\\room\\inputjuzhong.js"],"names":["cc","Class","extends","Component","properties","zistinput","default","type","Node","onLoad","onClick","console","log","editbox","getComponent","EditBox","render_cmd","sgNode","renderCmd","edTxt","_edTxt","style","Object","keys","forEach","key","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,mBAAU;AACNC,qBAAQ,IADF;AAENC,kBAAKP,GAAGQ;AAFF;AAhBF,KAHP;;AA0BLC,UA1BK,oBA0BK,CAET,CA5BI;;;AA8BLC,aAAQ,mBAAU;;AAGVC,gBAAQC,GAAR,CAAY,KAAKP,SAAjB;AACA,YAAIQ,UAAU,KAAKC,YAAL,CAAkBd,GAAGe,OAArB,CAAd;AACAJ,gBAAQC,GAAR,CAAYC,OAAZ;AACA,YAAGA,OAAH,EAAW;AACX,gBAAIG,aAAaH,QAAQI,MAAR,CAAeC,SAAhC;AACA,gBAAIC,QAAQH,WAAWI,MAAvB;AACA;AACAD,kBAAME,KAAN,CAAY,YAAZ,IAA4B,QAA5B;AACA;AACAC,mBAAOC,IAAP,CAAYP,UAAZ,EAAwBQ,OAAxB,CAAgC,UAASC,GAAT,EAAa;AAC7Cd,wBAAQC,GAAR,CAAYa,GAAZ,EAAgBT,WAAWS,GAAX,CAAhB;AACC,aAFD;AAGC;AAER,KA/CI;;AAmDLC,SAnDK,mBAmDI,CAER;AArDI;;AAuDL;AAvDJ","file":"inputjuzhong.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\resources\\prefab\\room","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        zistinput:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n    },\r\n\r\n\r\n    onLoad () {\r\n        \r\n    },\r\n\r\n    onClick:function(){\r\n       \r\n        \r\n            console.log(this.zistinput)\r\n            var editbox = this.getComponent(cc.EditBox);\r\n            console.log(editbox)\r\n            if(editbox){\r\n            var render_cmd = editbox.sgNode.renderCmd;\r\n            var edTxt = render_cmd._edTxt;\r\n            //text-align:\r\n            edTxt.style[\"text-align\"] = \"center\";\r\n            //遍历下对象\r\n            Object.keys(render_cmd).forEach(function(key){\r\n            console.log(key,render_cmd[key]);\r\n            });\r\n            }\r\n        \r\n    },\r\n\r\n\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}